import zipfile
import xml.etree.ElementTree as ET

xlsx_path = "sample.xlsx"

# === B∆∞·ªõc 1: L·∫•y ch·ªâ s·ªë shared string t·ª´ cell D4 trong sheet1.xml ===
with zipfile.ZipFile(xlsx_path, 'r') as z:
    with z.open('xl/worksheets/sheet1.xml') as f:
        sheet_tree = ET.parse(f)
        sheet_root = sheet_tree.getroot()
        ns = {'a': 'http://schemas.openxmlformats.org/spreadsheetml/2006/main'}

        # T√¨m √¥ D4
        cell = sheet_root.find(".//a:c[@r='D6']", ns)
        if cell is None:
            print("‚ùå Kh√¥ng t√¨m th·∫•y √¥ D4.")
            exit()
        shared_string_index = int(cell.find("a:v", ns).text)

    # === B∆∞·ªõc 2: L·∫•y chu·ªói ƒë·ªãnh d·∫°ng t·ª´ sharedStrings.xml ===
    with z.open('xl/sharedStrings.xml') as f:
        ss_tree = ET.parse(f)
        ss_root = ss_tree.getroot()

        # L·∫•y ph·∫ßn t·ª≠ <si> t∆∞∆°ng ·ª©ng ch·ªâ s·ªë
        si = ss_root.findall("a:si", ns)[shared_string_index]

        print(f"üéØ N·ªôi dung √¥ D1:")

        for r in si.findall("a:r", ns):
            text = r.find("a:t", ns).text
            rPr = r.find("a:rPr", ns)
            
            # L·∫•y m√†u n·∫øu c√≥
            color_tag = rPr.find("a:color", ns) if rPr is not None else None
            color = color_tag.attrib.get("rgb") if color_tag is not None else "default"
            
            # L·∫•y font n·∫øu c√≥
            font_tag = rPr.find("a:rFont", ns) if rPr is not None else None
            font = font_tag.attrib.get("val") if font_tag is not None else "default"
            print(f"  - Text: {text} | Font: {font} | Color: {color}")
